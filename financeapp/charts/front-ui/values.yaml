# Default values for front-ui.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: front-ui
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "0.1.0"

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  create: true
  name: financeapp-front-ui

  rbac:
    create: true
    clusterWide: false
    rules:
      - apiGroups: [""]
        resources: ["endpoints", "services", "pods"]
        verbs: ["get", "list", "watch"]

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 8080

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/

  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe: # Example for Spring Boot Actuator
  httpGet:
    path: /actuator/health/liveness
    port: http
  initialDelaySeconds: 60
  periodSeconds: 30
readinessProbe: # Example for Spring Boot Actuator
  httpGet:
    path: /actuator/health/readiness
    port: http
  initialDelaySeconds: 60
  periodSeconds: 5

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
secrets: {}

autoscaling:
  enabled: false

config:
  SPRING_PROFILES_ACTIVE: "dev"
  keycloak_server_url: "http://keycloak.local"
  KEYCLOAK_SERVER_REALM: zbank
  KEYCLOAK_SERVER_USERNAME: gatekeeper
  KEYCLOAK_SERVER_PASSWORD: swordfish

  EXCEPTIONS_MAKE_ACCFAILURE: "Не удалось создать счёт"
  EXCEPTIONS_SEARCH_ACCFAILURE: "Счёт не найден"
  EXCEPTIONS_MAKE_USERFAILURE: "Пользователь не создан"
  EXCEPTIONS_SEARCH_USERFAILURE: "Пользователь не найден по имени"
  EXCEPTIONS_DESER_FAILURE: "Cannot deserialize payload"
  EXCEPTIONS_OPERATION_FAILURE: "Operation type not recognized"
  EXCEPTIONS_PASS_EDIT_FAILURE: "Password is not updated"

  SCHEDULER_ENABLED: "true"