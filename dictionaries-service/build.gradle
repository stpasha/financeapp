plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.5'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'net.microfin'
version = '0.2'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2024.0.1")
    set('postgresqlVersion', "1.0.7.RELEASE")
    set('testContainersVersion', "1.19.0")
}

dependencies {
    //Spring
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    //Local
    implementation project(":chassis-api")
    implementation project(":chassis-service-client")
    implementation project(":chassis-gateway-client")

    //Util
    implementation 'io.micrometer:micrometer-registry-prometheus:1.15.3'
    annotationProcessor 'org.projectlombok:lombok:1.18.38'
    compileOnly 'org.projectlombok:lombok:1.18.38'
    implementation 'org.mapstruct:mapstruct:1.6.3'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'
    implementation 'org.liquibase:liquibase-core:4.31.0'

    testImplementation 'org.mapstruct:mapstruct:1.6.3'
    testAnnotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'
    implementation 'io.micrometer:micrometer-tracing-bridge-brave:1.4.5'  // Мост между Micrometer и Brave
    implementation 'io.zipkin.reporter2:zipkin-reporter-brave' // Библиотека для отправки спанов в zipkin
    implementation 'io.github.openfeign:feign-micrometer:13.6'
    //implementation 'org.apache.kafka:kafka-log4j-appender:3.9.1'
    //Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.testcontainers:junit-jupiter:1.20.6'
    testImplementation 'org.testcontainers:postgresql:1.20.6'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'net.datafaker:datafaker:2.4.2'
    testImplementation 'org.testcontainers:junit-jupiter:1.20.6'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.11.4'
    testImplementation 'org.assertj:assertj-core'
    testImplementation("org.springframework.kafka:spring-kafka-test") {
        exclude group: "ch.qos.logback"
    }

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
    dependencies {
        dependency "org.apache.commons:commons-text:1.12.0"
        dependency "org.apache.httpcomponents:httpclient:4.5.14"
        dependency "org.bitbucket.b_c:jose4j:0.9.4"
        dependency "commons-io:commons-io:2.18.0"
        dependency "org.scala-lang:scala-reflect:2.13.14"
        dependency "org.scala-lang:scala-library:2.13.15"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

configurations.configureEach {
    resolutionStrategy {
        failOnVersionConflict()
    }
}

configurations.configureEach {
    exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
}
