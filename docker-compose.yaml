

services:
  keycloak-postgres:
    image: postgres:17
    environment:
      POSTGRES_DB: ${KEYCLOAK_DB_NAME}
      POSTGRES_PASSWORD: ${KEYCLOAK_DB_PASSWORD}
      POSTGRES_USER: ${KEYCLOAK_DB_USER}
    ports:
      - '${KEYCLOAK_DB_EXTERNAL_PORT}:${KEYCLOAK_DB_INTERNAL_PORT}'
    volumes:
      - keycloak_postgres_data:/var/lib/postgresql/data
    networks:
      - zbank-network


#  keycloak:
#    image: quay.io/keycloak/keycloak:24.0
#    command:
#      - start-dev
#      - --http-port=8080
#      - --import-realm
#      - --override=true
#      - --hostname=${KC_HOSTNAME_EXTERNAL}         # ← внешний хост или host.docker.internal
#      - --hostname-strict=false
#      - --proxy=edge
#      - --hostname-port=${KEYCLOAK_EXTERNAL_PORT} # ← внешний порт (7080)
#    environment:
#      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
#      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
#      KC_HOSTNAME_STRICT: ${KC_HOSTNAME_STRICT}   # оставьте false
#      KC_PROXY: edge                              # ← важный флаг
#      KC_HOSTNAME: ${KC_HOSTNAME_EXTERNAL}        # ← должен совпадать с --hostname
#      KC_HOSTNAME_PORT: ${KEYCLOAK_EXTERNAL_PORT}
#      KC_DB: postgres
#      KC_DB_URL_HOST: ${KC_DB_URL_HOST}
#      KC_DB_URL_DATABASE: ${KEYCLOAK_DB_NAME}
#      KC_DB_USERNAME: ${KEYCLOAK_DB_USER}
#      KC_DB_PASSWORD: ${KEYCLOAK_DB_PASSWORD}
#    healthcheck:
#      test: [ "CMD-SHELL", "exec 3<>/dev/tcp/127.0.0.1/7080; echo -e 'GET /health/ready HTTP/1.1\r\nHost: localhost:7080\r\nConnection: close\r\n\r\n' >&3; cat <&3 | grep -q '\"status\": \"UP\"' && exit 0 || exit 1" ]
#      interval: 15s
#      timeout: 2s
#      retries: 6
#    depends_on:
#      - keycloak-postgres
#    ports:
#      - "${KEYCLOAK_EXTERNAL_PORT}:${KEYCLOAK_INTERNAL_PORT}"
#    volumes:
#      - ./keycloak:/opt/keycloak/data/import
#    networks:
#      - zbank-network


  keycloak:
    image: quay.io/keycloak/keycloak:24.0
    container_name: keycloak
    hostname: keycloak
    command: start-dev --http-port=8080 --import-realm --override=true
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
#      KC_HOSTNAME: keycloak
#      KC_HTTP_PORT: 8080
      KC_HOSTNAME_URL: http://localhost:7080
#      KC_HOSTNAME_STRICT: false
      KC_HEALTH_ENABLED: ${KC_HEALTH_ENABLED}
      KC_LOG_LEVEL: ${KC_LOG_LEVEL}
      KC_DB: postgres
      KC_DB_URL_HOST: ${KC_DB_URL_HOST}
      KC_DB_URL_DATABASE: ${KEYCLOAK_DB_NAME}
      KC_DB_USERNAME: ${KEYCLOAK_DB_USER}
      KC_DB_PASSWORD: ${KEYCLOAK_DB_PASSWORD}
    healthcheck:
      test: [ "CMD-SHELL", "exec 3<>/dev/tcp/127.0.0.1/8080; echo -e 'GET /health/ready HTTP/1.1\r\nHost: localhost:8080\r\nConnection: close\r\n\r\n' >&3; cat <&3 | grep -q '\"status\": \"UP\"' && exit 0 || exit 1" ]
      interval: 15s
      timeout: 2s
      retries: 6
    depends_on:
      - keycloak-postgres
    ports:
      - "${KEYCLOAK_EXTERNAL_PORT}:${KEYCLOAK_INTERNAL_PORT}"
    volumes:
      - ./keycloak:/opt/keycloak/data/import
    networks:
      - zbank-network

  front-ui:
    build:
      context: .
      dockerfile: ./front-ui/Dockerfile
    depends_on:
      keycloak:
        condition: service_healthy
    ports:
      - "${FRONT_UI_PORT}:${FRONT_UI_PORT}"
      - "${FRONT_UI_DEBUG_PORT}:${FRONT_UI_DEBUG_PORT}"
    networks:
      - zbank-network

  account-service:
    build:
      context: .
      dockerfile: ./account-service/Dockerfile
    environment:
      ACCOUNT_SERVER_PORT: ${ACCOUNT_SERVER_PORT}
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      SPRING_DATASOURCE_ACCOUNT_SCHEMA: ${SPRING_DATASOURCE_ACCOUNT_SCHEMA}
    ports:
      - "${ACCOUNT_SERVER_PORT}:${ACCOUNT_SERVER_PORT}"
      - "${ACCOUNT_SERVER_DEBUG_PORT}:${ACCOUNT_SERVER_DEBUG_PORT}"
    networks:
      - zbank-network

  services-db:
    image: postgres:17
    restart: always
    environment:
      POSTGRES_DB: ${SERVICES_DB_NAME}
      POSTGRES_USER: ${SPRING_DATASOURCE_USERNAME}
      POSTGRES_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    ports:
      - "${SERVICES_DB_EXTERNAL_PORT}:${SERVICES_DB_INTERNAL_PORT}"
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${SPRING_DATASOURCE_USERNAME}", "-d", "${SERVICES_DB_NAME}" ]
      interval: 1s
      timeout: 5s
      retries: 10
    networks:
      - zbank-network

  adminer:
    image: adminer
    restart: always
    depends_on:
      services-db:
        condition: service_healthy
    ports:
      - 8090:8080
    networks:
      - zbank-network

volumes:
  keycloak_postgres_data:
  postgres_data:

networks:
  zbank-network:
    driver: bridge
